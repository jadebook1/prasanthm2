#!/bin/bash

# Function to execute a SQL query and store the result in a variable
execute_query() {
  local query="$1"
  local result=$(db2 -x "$query")
  echo "$result"
}

# Main script logic
main() {
  # Variables to store accumulated data
  tables=()
  join_conditions=""
  main_table=""

  # Read the CSV file and process the data
  while IFS=, read -r table_name column_name key_column referenced_table referenced_column _
  do
    # Add the table to the list
    tables+=("$table_name")

    # Construct the join condition
    if (( ${#tables[@]} > 1 )); then
      prev_table="${tables[$((${#tables[@]} - 2))]}"
      join_conditions+=" LEFT JOIN $table_name ON $prev_table.$key_column = $table_name.$referenced_column"
    fi

    echo "Processed table: $table_name"
  done < smp.csv

  # Determine the main table based on the table with the most columns
  max_columns=0
  for table in "${tables[@]}"; do
    column_count=$(awk -F',' -v table="$table" '($1 == table){print NF}' smp.csv)
    if (( column_count > max_columns )); then
      main_table="$table"
      max_columns=$column_count
    fi
  done

  # Generate the dynamic SQL query
  query="SELECT"

  # Generate column references with table aliases
  for table in "${tables[@]}"; do
    table_alias=$(echo "$table" | sed 's/[^[:alnum:]]/_/g')
    query+=" $table_alias.*,"
  done

  # Remove trailing comma from column references
  query=${query%,}

  query+=" FROM $main_table"

  # Add the join conditions if available
  if [[ ! -z "$join_conditions" ]]; then
    query+=" $join_conditions"
  fi

  echo "$query"

  echo "Query executed"
}

# Execute the main script
main
